Tá bom? Deixa eu mostrar, eu vou mostrar para vocês uma outra construção de de primitivas que funcionam pra gente implementar assinaturas, tá? Que é em cima desse dessa ideia de curvas elípticas, tá?

Antes antes de eu vir aqui, tá? Deixa eu, tem duas meio que duas grandes divisões de possibilidades da gente fazer cor assim, essas assinaturas aqui, tá? A primeira categoria são assinaturas baseadas em hash por exemplo aquela aquele lamp signature que a gente viu ali. Tem outros esquemas que são variações do daquele, tá? Hashed. Normalmente, qual a desvantagem desses sistemas? Vocês viram ali, as chaves são grandes. Normalmente são sistemas de one one time use, né? Você usa uma chave, só pode assinar uma vez e e etc. Em princípio, qual que é a vantagem desse tipo de sistema? Acredita-se que isso aqui é resistente a ataques cônticos, tá? Por quê? Que ataques quânticos eles eles a gente conhece algoritmos quânticos que resolvem problemas que são baseados em number theory, né? Tipo teoria dos números, que é o grande outra categoria de sistemas criptográficos. tem alguma coisa de fatos sobre números na matemática mesmo e a gente usa esses fatos para construir os sistemas, tá? E aí aqui tem meio que meio que duas categorias, tá? Sistemas são baseados em RSA, que são baseados em faturação de números primos e sistemas de curvas elípticas, que é o que eu vou mostrar para vocês o o o fundamento hoje, tá? o fundamento tem várias tipo 300 mil curvas ali, enfim, mas vocês vão entender mais ou menos o fundamento hoje, tá? Todas elas base funciona mais ou menos parecida. É, eu não vou falar de RSA aqui para vocês, apesar de ser um tópico extremamente importante em crirypto, extremamente importante, tá? Basicamente a internet é roda em cima de RSA, tá? Extremamente importante. Eu não vou falar de RSA. Por quê? Porque eu não conheço nenhuma cripto que usa sistemas baseadas em RCA para nada, tá? E por quê? Não é porque elas são inseguras, porque as chaves são grandes ainda. Elas são menores do que essas de rest, mas elas ainda são relativamente grandes. O sistema de curvas elíricas, eles tm uma vantagem que eles são muito compactos, muito compactos, tá? Qual que é a desvantagem? Tem, em princípio, duas desvantagens. É mais custoso você fazer os as operações na curva elíptica. Vocês vão ver aqui como é que a gente vai ver como é que são as operações. É um pouco mais custoso fazer as operações, tá? É mais caro do que ficar calculando hash em princípio, mas eu tenho essa vantagem de que é muito compacto. Tipo assim, minhas chaves vão ter, sei lá, 256 bits. Minhas minhas chaves públicas vão ter 512 bits no máximo. Assim, são muito compactas, tá? muito muito compactas e o nível de segurança é bastante elevado pro nível de compact, tá? Qual a desvantagem desses dois sistemas aqui? A SA e baseados com vis elítricas, a gente conhece algoritmos quânticos que dada a chave pública você consegue calcular a chave privada. Não é assim, ó, tipo instantâneo, mas é bem mais rápido do que ficar testando todas as possibilidades, que é o que a gente tá vendo, que os restos protegem a gente, tá? A gente vai usar, tentar usar o mesmo fato em outros lugares, tá? De que você sabendo uma coisa, tem uma função, né, f(x), você sabe na saída, você não consegue calcular a entrada. A gente vai construir esse tipo de coisa diferente agora. E em hashes não se conhece nenhum algoritmo quântico, porque os hashs não são baseados em em fatos numéricos, eles são tipo permutações de bits. E é um negócio foi ao longo da história, a gente foi vai fazendo rest, falou: "Ah, esse aqui tá, não sei o quê, aí alguém inventou um ataque e aí próximo função de hash mitiga aquele ataque." que aqu até que a gente chegou nas funções que a gente tem hoje que tipo elas são bem seguras mesmo, porque a gente já viu quantidade assim vários dos problemas e a gente agora sabe fazer funções de R que tipo limitam muito a superfície de problemas que você pode encontrar. Não tô dizendo que isso é uma prova de falhas, tá? Quanto tempo é estimado que a que os computadores quânticos possam oferecer algum tipo de de Emo. Computador quântico vai ser uma ameaça real? Não faço a menor ideia. Eu sou do eu sou do time dos céticos, mas é pode ser que eu esteja muito errado, entendeu? Eu acho que vai demorar muito. Se acontecer eu acho que vai demorar, mas eu sou do time do séticos. Eu acho que você não devia me ouvir. Aí vem vai ter uma aula do pessoal da MARTI que vai que o o o que é com Hunter que ele ele vai mostrar para vocês, ele vai tentar convencer vocês de que eu tô errado, que o time do sético está errado, que que a gente deveria estar se preocupando com isso para ontem e vai mostrar um pouco como é que é, quais são os problemas e parte das soluções que estão sendo apresentadas. Tudo bem, tinha prometido, né? É, enfim. saador cancelaram. É, tem muito te também em cima dessas coisas aí, dessa desses anúncios. Mas vamos lá, tá? Vamos lá. Deixa eu virar um pouco pro slides aqui. Vocês estão vendo? Se eu alterno aqui, vocês vem as duas coisas, né? Tá bom. Então, vamos lá. Vamos lá. Vamos lá. Então, vamos lá. Presta bastante atenção no que eu vou fazer, tá? Vocês vão ver que tem algumas coisas que elas vão olhar e falar, vocês vão olhar e falar: "Cara, isso aqui é meio meio estranho". E algumas coisas são meio estranhas, como eu não tenho tempo de ficar fazendo todas as provas aqui e tal, com vocês, algumas coisas vão ser só meio dogmáticas. Na minha playlist de aulas do ano passado tem uma sessão mais longa de explicando essa cripto aqui, tá? De mostrando como é que constrói os campos finitos, as curvas elípticas, mostrando as algumas propriedades e aí mostrando as assinaturas com muito mais detalhe. Ah, por que que é a a conta é assim? tá mostrando com um pouco mais de detalhe, aí vocês assistem mais detalhe lá, mas aqui vai ser são um pouquinho mais dogmático, mas eu acho que vai funcionar porque a gente vai precisar. Então vamos lá. Que que é uma curva elíptica pra gente? Que que vai ser uma curva elíptica pra gente? Tá aqui pra gente eu vou tem várias famílias de curvas elípticas aqui. Eu vou selecionar uma família muito específica, tá? de que é o conjunto de pontos X Y que satisfazem essa equação, onde A e B são duas constantes que a gente escolhe na hora que vai definir qual é o sistema. Então, dados A e B constantes, todo mundo não concorda com eles. O que que é a curva elíptica? É o conjunto de todos os pontos X, Y que vão satisfazer essa curva, essa equação aí, tá? Essa é uma equação particular que a gente chama de forma curta de vários traços. Tem outras, tem uma definição mais genérica de curva elítica e aí gera outras famílias de equações, etc. Por que que eu vou lidar com essa aqui? Porque essa daqui é a mais comum de encontrar nos sistemas criptográficos que que são de fato utilizados, tá? Os outros são um pouco mais teóricos, tá? Em particular no Bitcoin, a gente vai escolher a = 0 e b = 7. Então a equação fica y² = x3 + 7. Repara que é a equação bem simpleszinha, tá? Bem simpleszinha. Parece até boboca assim, tá? Essa vai ser a escolha que a gente vai fazer. E tipo, essa curva específica, ela não foi escolhida por acaso. Ela é uma curva padronizada. Tem várias e várias e várias curvas, tem basicamente infinitas que você pode construir, tá? Só que tem várias curvas com parâmetros que que permitem certos tipos de ataque. Então a gente precisa tomar cuidado na escolha do A e B, tá? E aí existe um certo esforço, um certo, não, um esforço bem grande de padronização de dessas curvas, tá? O principal órgão que faz isso é o Nich, que é um órgão americano. E aí ele tem lá um alguns standards, alguns padrões de curvas que são que podem ser utilizadas pelo governo americano para implementar assistentes criptográficos, incluindo o exército, tá? Então, meio que aquilo ali é meio que o gold standard do do que se faz. Então, basicamente todo mundo, maioria segue o que o nich fala que o governo pode fazer, governo americano no caso, tá? Qual é a controvérsia disso? É que a gente não sabe direito como é que o nich escolhe esses parâmetros. Não é tão transparente assim os processo. E aí a gente não sabe se ele tá escolhendo parâmetros que ele conhece uma vulnerabilidade e ele não fala para ninguém para que na hora que as pessoas vão usar esses sistemas a gente, tipo, ele possa ir lá e fazer algum tipo de de backdoor porque ele sabe alguma coisa que a gente não sabe sobre as equações, tá? É basicamente esse esse o problema. Eu pessoalmente sou muito cético com relação a isso, tá? Porque cara, essas curvas todas são muito, são públicas há bastante tempo, elas são muito escrutinizadas. E eu acredito que o governo americano não ia botar um backdoor de propósito no sistema que ele mesmo é obrigado a usar, porque aí ele abre o problema de tá, e se o um outro alguém encontrar essa vulnerabilidade que ele colocou lá, aí ele tá com o sistema quebrado também, tá? E é de é bastante custoso você ficar trocando essas curvas aqui dos sistemas, tá? Em parte, por quê? Tem hardware que implementa isso aí, tem que trocar o hardware, então você pode imaginar que isso aí é um trabalho, tá? Enfim, enfim, a partir dessas desses pontos, a partir dessa curva de novo, tá? Al, lembra o que que é a curva? É o conjunto de pontos X Y que satisfaz essa equação. Aí é um conjunto de pontos, tem um monte de pontos lá, tá? Eu quero definir um grupo a partir desses pontos, tá? O que que é um grupo? Deixa eu O que que é um grupo? O grupo é um conjunto de coisas, que no meu caso vai ser os pontos da curva.

Esse conjunto precisa ter uma operação bem definida, uma operação binária e fechada. No meu caso, eu vou chamar essa operação de mais. Então, eu vou definir uma certa noção de adição, tá? Em curvas elípticas é mais comum você chamar essa operação de mais e em RSA, que é números em vez de pontos, você chamar essa operação de multiplicação. Mas é exatamente a mesma coisa. Exatamente a mesma coisa, tá? E eu quero que essa essa propriedade, essa operação de mais tenha essas propriedades. Tem uma que não tá escrito aí. A primeira delas é: se eu somar dois pontos que estão na curva A + B, na curva, o resultado tem que ser um ponto na curva, tá? Ou naquele conjunto que é o meu grupo. Então, se eu somar A + B = C, se o A tá no tá no grupo, o B tá no grupo, o C tá no grupo e a gente vai construir a soma para isso funcionar, tá? A gente vai, cuidado que a gente vai fazer a engenharia dessa coisa. Eu não sei como é que é essa soma ainda. Eu tô dizendo que eu quero que isso aconteça na hora que eu fizer a soma, na hora que eu for construir uma função que soma. Ainda eu quero que exista um elemento que eu vou chamar de i lá no grupo, que quando eu somo a + esse i, o resultado é o próprio A. E eu vou chamar esse elemento de elemento identidade. Eu quero que cada elemento, agora vocês estão vendo meu mouse. Ah, que beleza. Eu quero que

para todos os elementos A no grupo, eu quero que exista um elemento que eu vou chamar de - A, que também faz parte do grupo, que quando eu somar a com a A, vai dar inversa. Ou seja, cada todos os todos os elementos do grupo tem uma inversa, tem a sua inversa, tá? A gente vai querer construir a soma para que isso aconteça. Eu quero construir a soma de forma que seja comutativa. A + B = B + A, a ordem não importa aqui, né? E eu quero que seja associativo. Eu quero que A + B, o resultado disso + C. Repare que a + B é um ponto + C. Eu quero que seja igual a fazer B + C primeiro e depois somar com A. Isso aqui tudo é que são operações que a gente são propriedades que a gente tá acostumado com a na na soma que a gente tá acostumado com números, tá? O que que eu tô dizendo aqui? O que que é um grupo? Um grupo é um conjunto de coisas que não vão ser números mais são esses pontos. Um conjunto de coisas que tem uma soma e essa soma é bem comportada. Bem comportada é isso aqui, ó. Tá? E vocês vão ver que vai ficar bastante intuitivo porque vocês já isso aqui é para vocês é a soma normal, é isso aí, tá? Beleza? Vamos construir então essa soma, tá? Se eu definir esses pontos X, Y sobre o conjunto dos números reais, ou seja, X e Y são números reais, essa é a cara dessas curvas, tá? Não é o que a gente vai fazer, mas é mais fácil de eu mostrar o que que tá acontecendo visualmente, por isso que eu vou seguir por esse caminho. Mas a gente não vai usar o conjunto dos números reais, tá? Mas enfim, mas vai dar uma boa intuição, eu acho, tá? A curva da, repare que a curva da esquerda aqui, ó, ela tem meio que duas regiões, né, separadas assim, tá? E a curva da direita, ela tem uma só região. Todas elas têm mais ou menos essa cara, tá? Essa primeiro problema de escolher o A e o A e o B. Se você escolher um A e B que gera isso aqui para você, isso aqui vai te dar problema na hora de construir o grupo, tá? Então a gente, todas as curvas que a gente vai escolher vão ser do tipo, ela dizem que essa aqui em inglês a gente vai dizer que tem dinus one, o geno da curva é um. Tipo, ela só tem uma coisa com entre aspas contínu assim, tá? Não tem uma região separada, tá? Então repara, essa aqui é mais ou menos a cara dessa da dessas curvas no conjunto dos números reais. Se o x y for em números reais, tá? Eu quero definir isso aqui. P1 + P2 = P3, tá? Olha o que que a gente pode tentar fazer. Olha o que a gente pode tentar fazer. Eu tenho a curva lá vermelha e se eu traçar uma reta, tá? Eu não vou provar para vocês, mas isso acontece. Se eu traçar uma reta arbitrária aqui, ela passa em três pontos, exceto em dois casos particulares. O primeiro caso particular é se essa reta tá passando tangente bem aqui nesse nesse ponto aqui, aí ela só encontra num lugar só. Outro caso é, se eu escolher uma reta vertical, aí ela só bate em dois pontos na curva, tudo bem? E a gente vai precisar tratar esses casos aí, tá? Tratar esses casos, esses casos. Mas tirando esses esse esse caso patológico de eu escolher uma curva azul vertical, sempre que eu escolher uma curva arbitrária, vai bater em três pontos. escolhe uma uma reta como uma reta uma reta paralela ao Aí vai ter também umas umas umas coisinhas aqui, mas uns casinhos que a gente tem que botar uns ifels lá no código, mas enfim, vamos pegar o caso que é o normal que a gente vai definir em a soma. Se bate em três pontos, eu posso pensar assim: "Ah, aquela curva azul tá batendo no A, no B e no C." E eu posso pensar assim, vamos definir a soma então como sendo A + B é onde bate lá no terceiro ponto C. Repara que eu tô escolhendo, tá? Eu não tô dizendo que é, eu tô dizendo, ah, vamos tentar fazer isso. Por que que eu preciso fazer? Preciso eu preciso montar uma uma operação que entra dois pontos e, e produz o terceiro. Se eu tenho alguma regra aqui que pega uma curva e e relaciona três pontos, eu posso usar esses três pontos para tentar bolar a soma. Todo mundo OK com isso? Aí a questão é isso aqui é totalmente plausível. Tá? Isso aqui é uma é uma operação de soma possível para eu definir um grupo. Para responder isso, eu preciso checar se ela se ela satisfaz essas três coisas. Se eu consigo encontrar um ponto que vai ser a identidade, se eu consigo ter uma inversa e se eu consigo ter comutatividade e associatividade, tá? Repare que comutatividade é meio óbvio, porque se eu se eu definir como a + b = c desse jeito que tá aí, batendo essa reta, usando essa reta, se eu definir b + a = c, dá na mesma, né? Porque tá tudo na mesma reta. Então, tipo, o A e o B, não importa qual eu boto primeiro na equação lá, vai ser a mesma reta, vai bater no mesmo C. Repare que comutatividade é trivial aqui nesse nesse caso, tá? Eu ainda não vou tratar da questão do elemento identidade, mas vamos ver a associatividade, tá? associatividade é, e eu vou fazer, entre aspas, uma prova visual para vocês, que não é prova nenhuma, né? Mas o desenho tá na escala bem certinha e vocês vão ver que não dá certo, sem eu precisar ficar fazendo a conta toda aqui que dá demora bem mais tempo, tá? Então, olha só, eu vou eu escolhi três pontos, três pontos nessa curva aí, P, Q e R. Dos dois lados eu tô escolhendo o mesmo ponto, ó, P, Q e R, tá? Do lado esquerdo, eu vou fazer primeiro P + Q, do jeito que eu defini ali. Então vai ficar, ó, P + Q, traça reta bateu aqui nesse ponto que tá aqui. Agora eu vou fazer esse resultado mais R. Então, vou pegar a reta que passa no R e nesse ponto aqui e vou ver o terceiro ponto onde bate. Bateu aqui, ó. Seria o resultado dessa soma toda. Seria nessa posição. Agora vou fazer Q + R primeiro do outro lado. Q + R. Essa linha azul, somei, deu aqui, peguei esse resultado e somei com P. Bateu aqui, ó, o resultado final. Repare que a os dois lugares não bateam no mesmo lugar, tá? De novo, só tô fazendo uma prova visual aqui para vocês, mas esse desenho está em escala, tá tudo certinho, tá? Repara que é visualmente você consegue perceber que um um ficou aqui e o outro ficou ali. Então essa do jeito do jeito que eu tô definindo aqui, essa operação não é associativa. Então isso não serve para eu definir meu grupo. Posso até definir a soma, sim, mas não é a soma que eu não é uma soma que eu tô querendo. Tudo bem? Que que eu vou fazer? Que que eu posso fazer para tentar arrumar isso aqui? Porque parece promissor, tá, essa história da linha, tá? de passar uma reta e tal, porque é bem geométrico, a gente consegue calcular as coisas depois. Qual que é a ideia? Então, a ideia é fazer o seguinte, ó. A ideia é fazer o seguinte, show. E para esse caso aqui, antes de voltar lá, esse slide devia tá lá no caminho, tá? Vamos olhar esse caso patológico aqui, que é a reta vertical que eu falei para vocês, tá? Eu posso pensar o seguinte, na hora que eu tô escolhendo uma a reta vertical, vai bater em dois pontos. Eu preciso de um terceiro. Eu preciso de um terceiro. Que que eu posso pensar em fazer? Por isso que eu falei que vai ser um pouco artificial. Eu vou falar o seguinte: existe um outro ponto que não tá em cima dessa linha vermelha que satisfaz o o que vai ser o terceiro ponto onde essa reta azul vai encontrar. Olha o que eu tô falando. Tem um conjunto de todos os pontos X y que satisfazem a equação, que é onde tá a linha vermelha. E eu tô falando assim, eu vou adicionar esse conjunto um outro ponto, um outro ponto. Eu não vou dar uma coordenada específica para ele, só vou falar, existe esse outro ponto. E eu vou falar que toda vez que eu fizer a soma assim, ó, nessa linha vertical, o resultado é esse ponto aí que eu tô colocando. Qual a coordenada dele, professor? Sei lá, esse ponto aí que a gente dá nome para ele, o nome técnico dele é ponto no infinito, como se tivesse lá no infinito lá em cima, lá tivesse um terceiro ponto e toda reta vertical que eu botar aqui, encontra lá naquele mesmo ponto, tá? encontrar aquele mesmo ponto. E aí, se eu fizer isso, eu posso pensar: "Ah, olha só o negócio aqui. Se toda a reta vertical bate naquele mesmo ponto lá em cima, eu posso pensar que essa retinha aqui é a - a tá indo para aquele ponto. Eu posso escolher uma outra reta qualquer aqui, tá batendo no mesmo ponto. E eu posso pensar assim: "Hum, será que eu posso?" Vamos definir então o - a de um ponto como sendo o espelhado dele lá na na curva, porque aí funciona para eu definir uma inversa. Funciona para eu definir uma inversa, tá? E qual que é a ideia? Então aqui, ó, eu tenho uma noção, se eu fizer isso, eu tenho uma noção de tá, dado um ponto, eu tenho uma inversa, que é só pegar o cara lá do outro lado. Eu não sei dizer se quem tava projetando pensou nisso, mas eu pensaria, já que eu fiz aquela construção, em vez de escolher a + b = c nessa posição aqui que a gente táa fazendo antes, por que que eu não escolho não escolho o ceno o menos esse pontão de bateria, que é o c que tá aqui embaixo

já. Não tenho, não tenho a soma mesmo. Vamos tentar, tá? Vamos tentar, então. Vamos definir a soma assim agora. E aí, se a gente fizer entre aspas aquela coisa, entre aspas, aquela prova visual de novo para ver se isso aqui é associativo, acaba que é, olha só, eu vou somar P + Q, que é a a linha azul primeiro. P Q bateu aqui, como tava dando antes, aí eu fiz o menos bum. E esse aqui é o resultado do P + Q aqui embaixo. Aí eu peguei esse ponto mais o R, que é a linha verde bateu aqui, ó, nessa nessa porção. É a soma. A E aí eu vou pegar o inverter ele e aí bum bati aqui em cima. E aí deu o resultado final. Tá aqui a soma final. Agora vamos fazer q + R. Peguei a linha Q + R. Bateu aqui, inverti. Foi lá para baixo. Foi lá para baixo. Vou pegar esse ponto aqui. Vou pegar esse ponto aqui, somar com P. Tudo bom, filho? Bateu aqui. Vou inverter ele. Bum. Bateu no mesmo lugar. E aí eu consigo provar inclusive lá fazendo a a geometria analítica do negócio e tal, as formulinha, essa coisa coisa erada toda e provar que isso aqui bate mesmo, tá? Opa. Então eu começo a ter uma certa operação, consigo definir uma certa operação de soma que obviamente é comutativa, porque não importa a ordem do A e do B, vai ser a mesma reta, então vai bater no mesmo lugar. é associativa. É associativa. Eu tenho uma certa noção de uma inversa, que é essa ideia de espelhar o ponto em relação ao eixo de simetria dessa curva, que é o eixo das abscissas. E eu tenho uma noção de qual é o ponto identidade, que é esse ponto no infinito que eu escolhi arbitrariamente, que eu adicionei arbitrariamente. Então, eu tenho as quatro coisas que eu preciso para definir meu grupo. Tem as quatro coisas que eu preciso para definir meu grupo, tá? A quinta coisa, que na verdade é a primeira, né? É somar dois pontos na curva, sempre dá um um terceiro ponto na curva. Isso aqui tá meio óbvio pela construção, tá? meu a pela conção. Então isso aqui serve como uma operação de soma. Serve para ser minha operação de soma que tem as propriedades que eu desejo. Então é assim que eu vou definir essa soma, a soma de pontos da curva. Todo mundo OK com isso, professor? Essa é a única forma de definir a soma nesse conjunto aí que você tá definindo de pontos? Não, eu não tô dizendo isso. Tô dizendo que isso é uma forma de fazer e é a forma que a gente vai fazer e a forma que todos os sistemas fazem é essa. Eu não tô provando unicidade. Eu nem sei se tem uma prova de unicidade que essa é a única forma de fazer, tá? Mas também não interessa. Pergunta na que acho que você tinha botado A + B = C, mas tipo do jeito que você tá vai ser assim, ó. A + B = C. Tá marcado ali na quem é quem é cada um. Isso. Mas tipo, não seria - não. A + B. A + B igual a esse ponto aí, C.

Isso vai ser a definição do A + B. Que que é somar dois pontos nessa curva? pega os dois pontos que você tá somando, traça a reta, vê onde bate na curva e e faz o a inversa o o espelhado aqui, a simetria dele e pega esse ponto aqui de baixo.

Então, mas esse não é o men não, esse é o cab

tá definindo Eu tô definindo quem é A + B, A, B e C na soma. A tá aqui, o B tá aqui, o C vai ser. Quem é o C? A e B são dois pontos. Você pega qualquer que você quer somar. Quem é o C? Traça a reta, vê onde encontra, faz o espelho e pega aquele ponto que bateu. Eu tô definindo isso. Eu tô dizendo, a soma vai ser assim. Tô escolhendo, tô fazendo a engenharia da coisa. Tudo bem? Beleza. Lá na minha aula de de do ano passado tem mais detalhes, tá? que eu vou passar bem por alto, mas a gente consegue eu porque eu mostro como é que programa isso, porque eu preciso escrever uma função que soma essas duas coisas, preciso representar esses pontos e tal, inclusive tu vai fazer o programa de computador, tá? É um monte de fiel que você vai tratando caso a caso. Você olha e fala: "Ah, eu tô somando P com o ponto de identidade". O ponto de identidade é um cara separado lá. Você vai lá e definir um cara especial. A resultado é esse. Se foi o identidade, mais alguma coisa. É uma coisa. Eu tô somando nessa reta. É fácil de ver. Por quê? Porque o x do p1 é igual a coordenada x do p2. Então é fácil de decidir se eu tô nessa reta. Aí se for isso aqui, quanto que é o resultado? Sempre a identidade lá, aquele ponto, você marca lá, tum, que o resultado é esse.

Não, a gente vai mexer nos conjunto de números. Por enquanto, por enquanto eu tô dizendo que x1 e x2 são números. E e para ficar assim com comportadinho é números reais, mas a gente vai trocar o conjunto de números reais já na sequência para um outro conjunto, porque isso isso aqui desse jeito não é criptográfico, não é seguro. A gente não vai conseguir construir uma primitiva útil pra gente assim, mas assim eu consigo mostrar para você sem ficar um monte de ponto tudo espalhado por todo lado, tudo bem? Tá? E mais do que isso, para fazer essas contas aqui, eu acho que eu mostro isso também na na tipo como eu faço as contas intermediárias lá na outra na outra aula que tá gravada do ano passado, eu mostro para você que nas contas intermediárias não tem nenhuma característica especial dos números reais que eu tô usando. Eu tô usando algumas propriedades de uma coisa que a gente vai chamar de campo. E aí qualquer conjunto que seja um campo que tenha certas propriedades que que eu tô chamando de campo, serve para eu fazer a mesma conta. Essa que vai ser o chão, do negócio. Eu vou trocar o os números reais são um campo. Eu vou trocar qual campo é esse. Tudo bem? Mas já vou chegar ali. Por enquanto fica aqui na curva. Testo aqui, ó. Se eu tô nesse caso, a soma a identidade. Se eu tô nesse caso aqui, a soma a identidade. Também é fácil de detectar, porque é só ver se as coordenadas aqui são iguais e se os y são zero. Então é fácil de detectar. Você é só if if isso, if aquilo, if else, tá? No teu programa. Se o x1 é diferente do x2, eu tô nesse caso aqui, tá? Aí lá eu derivo a formulinha. Mas basicamente o que você vai fazer? Calcula a inclinação dessa reta aqui. Você conhece as coordenadas dos pontos. calcular a inclinação. Você tem a equação, a equação da curva, você vai conseguir calcular onde que bate essa projeção aqui. Aí eu faço lá o step by step lá na outra. Faz a projeção, pega o - y e aí o resultado vai ser, quando você junta tudo isso, vai ser essas duas formulinhas aqui. Então, repare que tem uma formulinha fechada para você calcular essa parada, tá? Que que eu preciso fazer paraa formulinha fechada, ó? Eu preciso conseguir multiplicar números. Tá vendo, ó? S² é S x. Eu preciso conseguir somar números porque S² - X é S² + - X. Então preciso ter um conjunto numérico depois que consiga somar e multiplicar para eu conseguir fazer isso aqui. E o último caso é esse aqui que é quando eu tô somando P + P. Tô fazendo tô calculando P1 + P1. A reta, tipo, a reta onde vai bater é uma tangente lá naquela curva. Aí vocês viram em cálculo como é que calcula a tangente, é igualzinho a conta de cálculo, tá? Formulinha tá aqui, junta tudo com a equação da curva e tal, faz as contas todas intermediárias. Formulinha fechada para isso aqui também. Pronto. Tá aqui para mim não não vou derivar todas elas, mas se você ficar mais curioso, tem uma aula específica lá do no curso do ano passado, tá gravado lá no meu canal no YouTube. Todo mundo quer até aí? Tá? Então eu consigo implementar isso. Em princípio, é implementar isso aqui de forma tem que ser cuidadoso, mas é possível implementar, como vocês estão vendo aqui, tá? Beleza? Só que não é isso que a gente vai fazer, tá? Eu vou definir

por que que não é isso que eu vou fazer. Deixa eu virar pro meu caderno aqui. Por que que não é isso que eu vou fazer? Lembra? Eu quero fazer uma assinatura digital. Então eu preciso de uma função que gera chaves primeiro, né? Gera chaves, uma função que assina, uma função que verifica, tá? Como é que vai ser minha função que gera chaves, tá? Que gera chaves, ela vai funcionar assim. Ela vai funcionar assim. Eu vou escolher um número e aleatório. Vou escolher um número e aleatório, tá? E aí eu vou pegar um ponto específico naquela curva que eu vou chamar de G. E esse G é uma constante. Todo mundo a gente escolhe ele a priori, fala assim: "Ah, para essa curva vai ser esse G aqui que a gente vai usar. E aí eu vou escolher esse G. Esse G é um ponto gerador, tá? Ele gera outros pontos. Repare, ele gera, ele vai servir para eu gerar outros pontos. O resultado disso aqui vai ser a minha chave pública, tá? Professor, mas o que que significa e x g? Isso aqui é um escalar, né? Isso aqui é um número e isso aqui é um ponto naquela curva. Eu preciso definir o que que significa multiplicar um escalar pelo ponto, porque eu não defini ainda, tá? Eu vou dizer que n, um número n vezes um ponto a na curva, se esse n for um número inteiro, será a + a + a n vezes.

A soma tá bem definida. A soma tá bem definida. Então eu posso usar essa anotação aqui. Se eu somar o A com a três vezes, eu vou chamar isso de 3 x A. Se eu somar o A com ele mesmo 10 vezes, vou dizer que isso aí é 10 x A. Tudo mundo bem? Só que só funciona se aquele n for um número inteiro. Não funciona se for um número real. Não funciona se for um número real. Porque aí eu preciso definir, tá? E o que que então é multiplicar o número real para esse ponto. Eu preciso definir isso, tá? Não é o que a gente vai fazer, tá? Exatamente por isso que os meus escalares eu preciso que eles sejam inteiros. Não só por isso, mas esse é um dos motivos que eu pelo qual preciso que os meus escalares sejam inteiros. Isso quer dizer que quando eu voltar aqui, essas contas aqui, o X, o Y, também precisam ser números inteiros.

Também precisam ser números inteiros. Então vou precisar restringir o conjunto lá dos X, Y, onde esses que é o espaço onde esse esses pontos aqui tão existem, né, num conjunto de números inteiros. Tudo bem? A equação continua a mesma da curva, tá? A equação da curva é a mesma. Só que agora eu tô dizendo X vai ser um número inteiro em vez de um número real e Y vai ser um número inteiro em vez de um número real. Então tô colocando uma restrição adicional. Tudo bem? Mas vocês concordam comigo que números inteiros

tem uma noção de somar, dividir, multiplicar, subtrair, de boa, né? Não preciso ficar aqui elaborando em cima disso, tá? Tá, professor, mas é só isso, então, a mudança ainda não, porque olha só, essa essa continha que tá aqui na na cara agora e x g ig p, isso aqui vai a gente vai aparecer o tempo todo, tá? Isso aqui, lembra, todo mundo vai saber quem é o G. Todo mundo vai saber quem é o G, porque a gente vai, tipo, padronizar o G primeiro. Todo mundo vai usar o mesmo G. Então, todo mundo já conhece o G. O P eu vou mostrar para você. Quando eu assinar alguma coisa para você verificar, eu preciso te dar o P.

Você tá vendo G? Você tá vendo P? Eu preciso que eu preciso que dados G e P não seja possível calcular o E. Eu preciso que isso seja verdade, que dados G e P não seja possível calcular o E é parecido com parecido com a resistência pra imagem do de um R. Por quê? Se eu te dou um H0, que é a saída do R, poderia ser o equivalente desse cara. e você sabe a função de rest, que seria o equivalente desse cara aqui, você não consegue calcular o x ou descobrir qual o x. Eu preciso de alguma coisa parecida aqui, ó. Eu preciso que tenha essa característica de hiding, que se eu te der o P, você não tá escondido o E, você não consegue calcular. que não seja inversão. Hã, que não seja inversão. Eu isso aqui, exatamente, mais formalmente, isso aqui é uma função f(x) que gera o y, tá? E eu preciso que essa f seja uma função difícil de inverter. Não é que é impossível, porque aqui você pode ficar chutando vários e es, fazer a força bruta no e ficar caçando qual o e que produz aquele p. Você vai testando, testando, testando. Como é que você mitiga isso? Faz o espaço de busca do E ser muito grande. Qual vai ser o tamanho do E aqui pra gente? 256 bits, aproximadamente 256 bits. E aí para você chutar um e você precisa buscar muita coisa. E a gente não sabe, não é que a gente não sabe, tá? Tem um certo ataque que eu não vou mostrar aqui para vocês como é que funciona, que para números de 256 bits você consegue inverter isso aqui com dois com 2 elevado 128 tentativas. Ou seja, isso aqui para números de 256 bits te garante 128 bits de segurança. Por quê? Porque o melhor ataque que a gente conhece é essa escala aí. Todo mundo OK? Então o que a gente vai fazer aqui vai me dar 128 bits de segurança, tá? Se eu quero mais segurança, preciso aumentar o tamanho desses caras aí, tá? É, o mais comum aqui é usar as corvas de 256 bits, inclusive na nas coisas práticas da internet também, não só criptomoedas não, tá? 128 bits. Acredita que que a gente vai demorar muitas décadas ainda até conseguir quebrar na força bruta. Hoje o nível de segurança mínimo que meio que a gente todo mundo recomenda é 80 bits. Quer dizer que 80 bits, alguém que for tentar quebrar essa parada hoje, hoje precisaria de milênios para conseguir quebrar ainda por força bruta o sistema. Em termos de ataque utiliza criptografia quântica é tão seguro quanto as funções de teste? Não, aí é que tá o rolê. Aí é que tá o rolê. Quanto um computing consegue fazer isso aqui com menos iterações, bem menos iterações. Eu não sei te dizer quão menos, mas é bem menos. O algoritmo a gente já conhece de fazer essa fatoração aqui. Isso aqui é uma forma de fatoração. Esse algoritmo a gente sabe fazer quantum um quantum algoritm que é mais rápido do que isso aí, tá? Não é que é instantâneo ainda de novo, mas é bem menos do que isso aí. Bem menos do que isso aí. Bem menos. Então, uma coisa que demoraria, sei lá, milênios, pode ser que passe para anos. poucos anos, poucos meses, só que de novo, isso também depende da implementação, né? Isso aqui tudo teórico. Pode ser que, ah, é, sei lá, você precisa de 2 elevado a 40 para fazer no computador quântico, mas o computador quântico demora um dia para fazer cada iteração. Então, tu concorda comigo? Vai demorar um tempão ainda, né? Falando, não é mágica assim, é depende da implementação ainda, tá? Mas é aqui que o computador quântico entra na brincadeira. Ele consegue fazer essa faturação. Ele ele tem um truque que consegue fazer isso aqui. E aí eu não vou discutir como é que é esse truque. Lá na frente a gente vê como é que é. Talvez. Professor, lá nos íos da década de 80 eu vi alguma coisa nesse sentido usando multiplicação de matrizes e eh trechos grandes de de trecho, né? multiplicando matrizes que el Eu acho que esse esquema de matrizes o pessoal chama de leres, né? Tipo de reticulados, mas eu não conheço detalhe sobre isso, não sei se dizer, eu não sou criptógrafo. Esses esquemas onde 360, é, né? De de reticulados. É, mas eu não sei detalhe de como é que funciona, nem como é nem detalhe, não só de de como funciona, mas também não sei detalhe de como implementa. Todo mundo OK? Beleza? Então vamos lá. Vamos lá. Para eu ter essa propriedade de que E x g p é difícil de inverter, é difícil de inverter, eu preciso que o E seja um elemento do que eu vou chamar de FP, F de field. Ele tá nesse campo, tá? Vou definir o que é o campo primeiro, mas não é um campo qualquer, é um campo que tenha um número p - 1 de elementos. Deixa eu dar um exemplo aqui. O que que é o f de 7? E esse p vai ser de primo. 7 é o número primo. Que que conjunto é esse aqui que eu vou dar que eu vou chamar de F7? É o conjunto que tem esses elementos. 0 1 2 4 5 6 que tem sete elementos, tá? Repare que esse cara aqui é o p - 1, começa no zero e eu vou de 0 até p - 1. Isso é o que eu vou chamar de fp. Eu escolho o número primo e pego todos os números de 0 até p - 1. Tudo bem? E o que que é o e o que que é o campo? é um conjunto desse que tem uma série de propriedades que são estas aqui. Presta atenção. Vocês já conhecem isso aqui, mas vamos sistematizar porque isso aqui é o que a gente vai poder usar para qualquer coisa, tá? Tudo que não for isso aqui, eu não posso usar e vocês estão acostumados a usar mais propriedades do que o que tá enumerado aqui. Para ser um campo, eu preciso de um conjunto de coisas. que vai ser esse FP, que tem duas operações que eu vou chamar de mais e de vezes. O que que elas tem que fazer? Se eu tenho A e B no campo, A + B tem que ser um elemento do campo. Por óbvio, por óbvio, assim, para ser um negócio bem comportado, né? E o A vez bo. Então tô dizendo que é tipo essas operações elas são totais, né? Tipo, eu sempre consigo, se eu tiver a soma, tem um elemento lá que tá dentro do campo e tá tudo bonitinho para fazer essas contas aqui. Mesma coisa pro pra multiplicação. Dois, eu quero que exista um elemento que eu vou chamar de zero. Cuidado que esse zero não é necessariamente o primeiro elemento. É um cara que eu vou chamar de zero. Obviamente a gente vai chamar de zero um cara ser familiar pra gente, tá? que é parecido com os zeros dos números mesmo, mas eu quero que exista um cara que eu vou chamar de zero de tal forma que quando eu fizer a + 0, isso seja a para qualquer a do campo. Eu quero que exista um elemento que eu vou chamar de um. Cuidado porque ele não precisa ser o número um, a quantidade um. Isso aqui não é quantidades mais, tá? É um cara que chama um. De tal forma que quando eu faço a x 1, o resultado seja a para todos os elementos do campo. Repara que isso aqui é o que a gente tá acostumado, né, na soma e na multiplicação. Eu só tô pedindo operações para ter um propriedades para ter soma e multiplicação bem comportadas. E vocês já sabem intuitivamente que é bem comportado. Próximo. Se o A é um elemento do campo, eu quero que exista um elemento que eu vou chamar de - a. De tal forma, quando fizer a + - a, ele dá a identidade da soma. Então, repare, tem uma inversa aditiva para todos os elementos, que isso me permite fazer a subtração, entre aspas, né, que é o calculo a inversa aditiva e somo as duas coisas. E por fim, eu quero que se eu tiver um A no campo e o A for diferente de zero, eu quero que exista um a elevado -1 ou 1 sobre a, de tal forma que a x a elevado -1 seja 1. É a inversa multiplicativa. O que que eu não estou pedindo? Eu não tô pedindo que o mais seja comutativo. Eu não tô pedindo que seja associativo. Eu não tô pedindo que a multiplicação seja associativa. Não tô pedindo que seja multiplic eh associativa, comutativa. Eu não tô pedindo que tenha distributividade, o chuveirinho. Eu não tô pedindo isso para ser um campo. Se tiver essas coisas, melhor. Mas eu não tô pedindo. Então na hora que a gente for usar o campo, a gente não vai usar essas propriedades aí. Tá? Acontece que o campo que a gente vai definir aqui tem essas coisas a mais, mas isso é um bônus que permite a gente fazer umas otimizações, tá? Na hora de implementar. Mas eu não estou pedindo essas coisas. Repare, eu só tô pedindo que tenha soma, que tenha um que tenha um zero lá para aquela soma, que tenha uma multiplicação e ela tem um elemento de identidade e que tem a inversa aditiva e a inversa multiplicativa. Só isso que eu tô pedindo. Mas isso aqui é o que eu preciso para fazer as continhas que estão aqui atrás, ó, que eu preciso para implementar o o o cálculo dos pontos na curva nesse outro conjunto. Tudo bem? Todo mundo OK com isso? Beleza. Como é que isso não vai dar overflow? Como é que não vai dar overflow no que? Que que você quer dizer com isso? Tipo, você vai somar mais. Como é que ele vai se manter nesse campo? Nesse campo é como é que eu possoar? Nós precisamos definir o mais e o vezes. Agora eu vou mostrar para vocês no nesse nesse campo pequenininho aqui de sete elementos. Mas obviamente, tipo assim, isso aqui tem que ser feito num campo com tipo muitos elementos. Por quê? Porque o E tem que ser bem grandão, tem que ter muitos bits, tá? Eu vou mostrar aqui num campo de de poucos elementos para vocês entenderem a mecânica da coisa, mas tipo, depois tem que fazer isso para um P bem maior. A implementação é a implementação é um pouquinho mais difícil do que eu vou fazer aqui, tá? Mas olha só, repare que eu ainda não disse como que é o mais e como que é o vezes. Eu preciso agora construir o mais e o vezes, tá? E eu posso fazer isso de várias formas, de várias formas. Como que tradicionalmente a gente vai fazer? Eu vou definir a + b como sendo a + b mod p. Já explico a notação e eu vou definir a x b. Repara que aqui são elementos do campo F de P, FP. E esses dois caras aqui são elementos dos inteiros aqui, ó. inteiro, não é com N, né? Como é que é o dos inteiro? Z. Z

assim, né? Tá. Cuidado aqui porque é uns lugares onde a anotação fica meio bagunçada, mas em todo livro que você vai encontrar vai encontrar mais ou menos assim, tá? Eu vou definir isso aqui como sendo a x B mod P. Já vou explicar exatamente o que que é isso, tá? Agora, presta atenção. Esses A e B são esses conjuntos. Esses A e B aqui é o conjunto de todos os números inteiros. Vocês conhecem? Tem número negativo, tem número, tem tem tipo 300.000 números, 300 milhões de números fora desse intervalo aí, ó. Tudo bem? E o que que é o mod? O resto da não é o resto da divisão inteira, tá? Então, mod p é eu fazer aqui, sei lá, a mod p é eu fazer a dividido por p A dividido por p. Aí vai te dar alguma coisa aqui, sei lá, Q. Boa de cociente, tá? E aí a gente vai poder escrever aqui, vai poder escrever que a é igual ao cociente vezes p mais um resto, que normalmente é o que aparece aqui quando você faz a aquele algoritmozinho da escola, tá? O que que é o mod? O mod é esse R aqui, ó. O mod de A a A mod P é esse R dessa conta aqui. Tudo bem? Cuidado, porque essa divisão é a divisão inteira. Então, 1 diente

é 1 e o resto, opa, não, mas zero quê? Zero o resultado disso aqui, o cociente é zero. É zero. Isso. E o resto é um.

Vamos fazer mais alguns aqui, sei lá. 7 dividido por 11. A divisão inteira. Isso aqui é quanto? Não é não. Então diferente. 11 11 div por 7. Isso aqui é 1 com resto de 4.

Tá fácil de fazer de cabeça ainda, né? Todo mundo entendeu o que que é esse mod, né? Todo mundo bem. Tá. Aí eu preciso definir, vou, eu vou só mostrar aqui para vocês como é que funciona, tá? Aquelas inversas, tal, não sei o quê. Isso aqui você pode ir lá e mostrar. Eu não vou fazer aqui para vocês, mas você pode mostrar que você pode mostrar que todas as operações estão dentro do campo, dentro da da dos elementos aqui, tá? Porque mod P, o resultado sempre vai ser um um número de 0 a p - 1. Sempre vai ser, tá? Sempre vai ser. Então qualquer dois números que você enfiar ali, pum, vai cair no intervalo que você quer. Esse mod serve para isso. Que que a gente precisa construir? O identidade e o um as inversas, certo?

Vai ficar assim, ó. Vai ficar assim. Vai ficar assim. Eu tenho esses elementos aqui, ó. 0 1 2 3 4 5 e 6. São todos os elementos que eu tenho. Eu quero somar eles com alguma coisa e eu quero que dê zero. Eu quero somar esse cara com alguma coisa, eu quero que dê um. Eu quero somar esse cara com alguma coisa, eu quero que dê dois.

Eu quero que dê três. Eu quero que dê quatro. Eu quero que dê cinco. Eu quero que dê seis. Porque a coisa que tá faltando ali é o o

é o a inversa de cada um daqueles caras ali, certo? É, na hora que eu somar aqui com x 2 + x = 2. Ah, isso aqui tá errado. Professor, você é burro. Eu quero que isso aqui seja 0 0 0 0 0 e 0, porque aí aquele x é a inversa do 2 e assim por diante, tá? Por essa construção aqui, é meio óbvio que o zero é a identidade dessa soma, porque eu vou botar zero. Opa. Eu vou botar zero aqui. Qualquer coisa que eu botar mais zero vai dar a mesma coisa. modo IP vai dar coisa dentro do campo de boa por essa construção aqui é óbvio, não preciso explicar muito que o o é identidade da multiplicação. Por quê? Porque eu vou botar um aqui no lugar do B. Aí qualquer coisa do campo 1 vai dar aquela mesma coisa. Mod P não vai dar efeito nenhum. Tudo bem? O que falta são as inversas. Então, presta atenção comigo aqui. Deixa eu copiar isso aqui. Pera aí, para ficar visível.

O overflow que você tava perguntando, talvez agora seja isso aqui, ó. Presta atenção aqui agora comigo, porque a soma é um pouquinho mais fácil de enxergar. A multiplicação dá um pouquinho mais trabalho que você andar, fazer mais o que eu tô fazendo. Mas olha, presta atenção, presta bem atenção. Agora, que que é somar? Que que é somar dois com três? Você pode pensar que é começar no dois e andar três elementos pra frente. Então, 2 + 3. Então, começa aqui. 1 2 3. É 5, tá? 2 + 3 é 5. E se eu somar dois números grandes, 6 + 6? 6 + 6 são dois elementos do campo, ó. 6. E vai andando pro próximo seis vezes. Quem é o próximo? Próximo é o zero. Ah, tá. Por que que o próximo é o zero? Porque tem o seria o sete aqui, não é? Que tá fora do meu conjunto. Quem é 7 mod 7? Zero, que é o que eu tô fazendo na soma, não é? Então o sete é o amigo do zero.

O próximo aqui seria o oito. Quem que é o 8 mod 7? Não, um 8/ 7 é 1 e resta 1. Então esse cara aqui é o amigo do sete. Esse aqui é o o amigo do oito. É o equivalente do 8. Esse é o equivalente do 9, do 10, do 11, do 13. E depois na próxima rodada fica em c hã tudo de novo, não é? Tudo de novo. Por quanto que é 14 mod 7? Zero. Quanto que é 14 di por 7? 2 com resto de zero. Então o 14 é equivalente ao zero nesse sistema.

Isso aqui não é uma reta, isso aqui é o ponteiro do relógio. Exatamente. Você vai andando em círculos ali. Tudo bem? E aí fica um pouco mais fácil de ver agora. Então quem é 6 mais 6? Começa no 6. 1 2 3 4 5 6 + 6 nesse sistema é 5. Aqui é que começa a ficar um pouco estranho, mas segue a regra. Tem uma regra bem definida aqui para fazer. Todo mundo bem, né? Então vamos lá. Começando no zero, quanto eu tenho que somar para chegar no zero?

Vou perguntar de novo. Comecei no zero. Quanto que eu tenho que somar para chegar no zero? O número que eu tenho que somar é um desses que tá aí. É 0 1 2 3 4 5 ou 6. Quanto? Zero. Você concorda que isso aqui vai dar certo? Isso quer dizer que o -0 é o zero. O zero é inversa dele mesmo na soma. O que tem que fazer sentido, tá? Tipo assim, isso já era para acontecer. Então aqui tá tudo bem.

1 mais alguma coisa, eu quero chegar no zero. Quanto que eu tenho que andar? 1 2 3 4 5 6. Isso quer dizer que -1 é 6 nesse sistema aqui.

Pegaram a lógica, né? Pegaram a lógica. No dois, quanto que eu tenho que andar? Tem que andar cinco. No três tem que andar quatro. No quatro tem que andar três. O cinco tem que andar dois. E o seis tem que andar um. Então, tão aí as inversas de cada um. Esse aqui é inversa do dois, esse é inversa do três e assim por diante.

Não é o menos alguma coisa, né? Não, mas é complementar para somar. É o complementar para somar sete. É, você viu ali como é que funciona a brincadeira? A soma é meio fácil. Tudo bem? Então tá aí definindo quem são as inversas. Obviamente para um conjunto muito grande não dá para enumerar assim, tá? Tem que tem que de fato fazer isso aqui, ó. fazer essa regra aqui, tentando mostrar uma intuição para vocês de que funciona. E a multiplicação, a multiplicação eu quero o zero não vai entrar, né?

O zero não tem inversa multiplicativo. A gente não pediu um inverso multiplicativo para ele. Por definição, eu quero que aqui seja um, aqui seja um, aqui seja um.

Os números são esse aqui. 0 1 2 3 4 5 6.

Tudo bem? A multiplicação é mais chatinha. Então vamos lá. Eu tô no um. Quanto que eu tenho que multiplicar o um para chegar no um? Um.

Todo mundo OK? Então, um vai ser a inversa dele mesmo. O que que tá escrito aqui? Essa primeira equação tá escrito que 1 elevado -1 é 1.

O 2,

o se eu multiplicar 2 por 0 dá quanto? Zero. Deu certo. Não. Se eu multiplicar 2 por 1, dá quanto? 2. Deu certo. Se eu multiplicar 2 por 2, dá quanto? 4. Chegou onde eu quero? Não. 2 x 3 dá quanto? É o que eu quero. 2 x 4 dá quanto? 8 mod 7. E aí dá quanto? 1. Opa. Então ele encaixa aqui, ó. 4. Então o que que eu tô dizendo? aqui do a inversa do do multiplicativa é o 4.

E assim por diante. Você pode ir testando e aí vai dar vai dar 4 5 é inversa do três, o dois é inversa do quatro, como a gente viu ali em cima, o três é a inversa do cinco e o seis é a inversa dele mesmo. E a cada um deles tem uma inverso, exceto zero, porque a gente não pediu inverso pro zero. Todo mundo bem? Então essa mais ou menos a intuição da coisa. Esse é o conjunto de números que vão ser as os escalares pra gente. As coordenadas X, Y dos pontos vão ser esses esses esses caras aqui, ó. E eles são inteiros, né? Se eles são inteiros, isso aqui fica bem definido ainda, né? Ó, se o n for naquele naquele conjunto ali, ó, a gente vai fazer tudo em cima do campo finito, tá? Que que eu preciso escolher? Então, um P específico. Eu preciso escolher um P específico. Qual o P? Precisa, precisa ser um P grande, um P com muitos bits. Por quê? Porque esse cara é E vai sair desse conjunto também. Eu quero que ele tenha muitos bits. Por quê? Porque aí alguém é muito difícil de chutar ou de tentar ficar testando, tá? Tem vários campos de 256 bits. No Bitcoin. A gente vai escolher um que é 2 elevado 256 - 2 elevado a cadê o p? Nem sei onde eu anotei ele. Eu acho que eu tenho aqui algum lugar. Pera aí.

Tá aqui. Ah, acho. 2 a 256 - 2 a 32 - 2 a 9 - 2 8 - 2 à 7 - 2 à6 - 2 4 - 2 elevado 0. Deixa eu só dar uma intuição para vocês aqui. Tá aqui anotada. 2 a 256 - 1 é o número de 256 bits com tudo um.

Todo mundo ok com isso? Tô bem com taitais lá prestação numérica, né? 256 - 1, que é 2 elevado a 0 é 256. Tipo, tudo um,

tudo um. O que que é o -4? é pegar o número que tá na posição 4, começando do zero, e zerar ele. O se é pegar o número que tá no bit, que tá na posição se e zerar ele. Mesma coisa até esse aqui. Todo mundo bem? Então é uma tonelada de um, tem um um uma picadinho de zeros lá no meio, ó. Esses esses caras dessas posições. É esse númerozão aí, tá aí? OK. Quantos números tem aí?

Tem aproximadamente 2 a 200. Opa, 2 a 256 números. Tem um pouquinho menos, tá vendo que é 2 a 256? Menos um pouquinho, tá? E esse pouquinho é muito menor, ó lá, ó. muito menor do que o total que eu tô de números que eu tenho. Então isso aqui para todos os efeitos são 256 bits. Mas esse resíduo aqui, ó, esse resíduozinho aqui

precisa ser tratado lá na brincadeira, porque ele que vai ser o história do mod P, não sei o que. Eu preciso considerar ele na hora de fazer esse mod P, tá? Mas em em parte esse número foi escolhido por quê? Porque esse resíduo cabe num número de 32 bits. Ele cabe nos 32 bits menos significativos. Isso quer dizer que eu consigo separar esse número aqui em vários pedaços menores,

vários pedacinhos menores, por exemplo, de 32 bits. E na hora de fazer a conta do mod P, basicamente eu só preciso mexer alguma coisa aqui, ó, um número pequenininho que eu tenho que ir lá e consertar um pedacinho, porque a diferença de P menos essa quantidade. Aí eu vou lá e somo naquela, na hora que eu tô fazendo esse essa voltinha do overflow ali que você tava perguntando. É, eu preciso somar isso aí. Então é bem eficiente de fazer. Eu não preciso fazer uma divisão de números inteiros. A divisão é cara. A divisão, pegar dois números gigantes desse aqui, dividir é bem caro. Só que essa curva, esse conjunto específico, eu não preciso de fazer uma divisão. Eu posso vir aqui somar na parte menos significativa o que tiver de carry do lado de cá. Aí é questão de implementação. Isso é bem mais eficiente de fazer essa normalização aí, tá? De manter essa coisa dentro do fazer aquele mod P, fazer a redução, pessoal chama, tá? Foi escolhido em parte por causa disso, tá? Essa curva do Bitcoin que tem esses parâmetros aí, a gente chama de SEC P256 K1. Sec é o nome do padrão que é secure e secure efficient cryptography, que é um padrão do nich. P256 é para lembrar aqui para você do tamanho desse P. E o K1 é esse essa esse resíduo específico aqui que tá apontado aqui, tá? Tem vári, tem outras curvas, nem é mais, nem é a curva mais usada, basicamente só uso em Bitcoin e variações de Bitcoin que tem por aí. Basicamente é a única aplicação dessa curva específica, tá? Tem uma outra curva que é o SECP 256 R1 que é mais usada, bem mais usada assim em aplicações gerais, tá? Mas ela é bem mais é só a escolha do P que é diferente. A escolha do P, a escolha do P do A e do B, tá? Mas enfim, é a mesma ideia que vocês estão vendo aqui. Todo mundo OK com isso? Todo mundo OK com isso? Que que eu posso fazer com isso então?

Ah, deixa eu só para por complete. Na a curva específica que a gente vai usar e vários e várias outras criptos usam a mesma curva, tá? A = 0, B = 7. A equação da curva é essa. O P do que vai definir o campo finito é esse monstro aqui. Esse número depois do o aquele que é ele é o primo. Não sei te dizer o resíduo ali, né? É o resíduo. Não sei te dizer, mas mas pode ser que provavelmente eu não sei, mas pode ser que seja se for primo, talvez tenha algumas propriedades especiais aí também. Esse ponto, esse, essa escolha aqui, ele te dá algumas propriedades para implementação, te dá uns truques de implementação e aí isso fica um pouco mais eficiente. Isso não é escolhido assim à toa, não. Que a dificuldade é baseada na faturação de de primos muito grandes, né? É, mas não, aqui não é faturação de primos, exatamente, mas se tiver primos enfiados aí no meio, tem algumas truques que você pode fazer que aceleram poucos alguns algumas alguns processos. Eu preciso escolher um ponto gerador, certo? O G, tá? O G nessa curva específica vai ser o que tem essas coordenadas aqui, esse esses dois monstrão aí, tá? Isso aqui é um ponto que a gente vai chamar de G. Tem essa coordenada X e L tem essa coordenada Y. Como é que isso aqui foi escolhido? Em princípio, eu não sei dizer porque os standar não são claros em relação a isso, tá? Como esse x aqui é muito grande, é um número muito grande, eu suspeito que eles simplesmente escolheram o número aleatório e e foram escolhendo números aleatórios até achar um x que tem um y que é que é da curva, porque nem todo x vai ter um correspondente na curva, tá? E esse n, esse n é o tamanho do conjunto de pontos que eu tenho disponíveis lá no grupo na hora que eu faço essa contagem aí, tá? pra gente não vai ser tão importante agora, mas esse N tem que ser grande, isso é o que importa, tá? E aí a cara, em vez de ser alguma coisa assim, ó, na hora que eu uso o campo finito para definir as coordenadas da curva, é mais parecido com um troço assim, um monte de ponto tudo espalhado por aí, tá? que tem algumas propriedades ainda. Repare que eles são simétricos aqui, ó, em relação a um a um certo eixo, tá? Aquelas continhas aqui para trás, todas continuam funcionando, tá? Eu não vou provar para você, mas todas continuam funcionando. Então, a gente consegue implementar e calcular. E não só isso, tem a propriedade que é o seguinte, eu enumerei alguns pontos aqui.

Esse aqui é o G. Pensa que esse aqui é o G, o ponto um. Na hora que eu faço G + G, o 2 tá é um desses aí, ó. O dois tá aqui, ó. G + G. Olha que eu pego esse aqui, o 2 e somo G, que é o 3G, eu não sei nem onde ele tá. Aqui, ó. Tá aqui. Na hora que eu faço o 4G, também não sei nem onde tá. Tá aqui, ó. Voltou para cá. O cinco tá aqui. Então, repare que e essa é a coisa que a gente quer. Na hora que a gente vai andando no G, a gente vai andando tudo tudo bagunçado nessa coisa aqui. Parece uma caminhada aleatória. Parece uma totalmente não é, tá? Parece uma caminhada aleatória. De tal forma que só olhando o G e o P, eu não consigo saber qual ponto que eu vou cair. Eu não consigo saber. Eu consigo ir lá e calcular o próximo. Mas esse é o que é o grande lance. Se eu te der um P, um ponto qualquer aqui desse aqui, sei lá, o 30. Se eu te der o 30, eu não falo que é o 30, tá? Eu só te dei esse ponto aqui, te dei as coordenadas dele. Bom, você sabe o G, você sabe que começa nesse. Você sabe que começa nesse. Eu te dei esse vai ser minha chave pública. Você não tem nada melhor que você possa fazer para descobrir que esse cara aqui é o 30, porque o 30 é minha chave, vai ser minha chave privada. Você não tem nada melhor para fazer do que pegar o G e ficar testando. Ah, é o um, é o dois, é o três, é o quatro. E ficar procurando ele aqui. Eventualmente você vai chegar no 30. Mas a questão é, se esse conjunto for muito grande, você vai precisar fazer isso muitas e muitas vezes. Professor, duas coisas. Eh, isso não cria um incentivo para você ter chaves públicas muito grandes ou com valor chaves públicas muito grandes, com valor grande, muitas interações. Isso não deixa caro você contar também essa? Hum, não entendi. Onde ficaria caro. É porque é é interativo esse processo, né? Não, porque vocês, tipo, a gente tem um algoritmo relativamente rápido, que é tempo polinomial, que eu pego uma constante, um escalar e multiplico por um ponto, é relativamente rápido, não é? É, não preciso percorrer essa parada toda assim na sequência, não. Para eu, se eu calcular, se eu escolher um e aleatório, tipo, que é um número bem grandão, e multiplicar por um ponto, essa multiplicação, eu não preciso ficar andando aqui na parada, eu vou direto. Bum. Eu acho que você é, não, não, não. Eu, tipo assim, tem um algoritmo rápido para isso que eu não vou mostrar aqui para vocês que eu não, meu Deus. É, tá, vai. Já comecei. Imagina que o teu e, o teu e ele vai ser, tá aparecendo. A intuição é a seguinte, o teu e vai ser 1 bit 0 x 2 elevado 0 + 1 bit 1 x 2 el 1 + 1 bit 2 x 2 el 2. 256 coisas dessa aqui, né? Como você quer multiplicar por P, concorda comigo que eu posso fazer isso aqui? Vezes P. Eu disse que no meu campo eu não tô exigindo que seja distributivo, mas é nesse campo específico, nesses campos que a gente usa, mas é aí eu posso escrever isso aqui como sendo B0 x 2 elevado 0 x P vezes P não vezes G, né, cara? Pera aqui. G

x g 2 elevado 1 x g e assim por diante. Você pode deixar até pré calcular pode até pré-calcular, mas não é normalmente não se faz não, tá? Aí repara isso aqui, ó. Preciso fazer essa conta, essa conta, essa conta e eh dobrar ou não o G. Dobrar o G é fazer G + G. Você, esse você pode até deixar pré-calculado, é até bom deixar que E o que, quanto que é o 4G? É 2g + 2G. Então, repara que isso aqui é relativamente rápido, você não precisa fazer essa percorrer essa aquela aquele espaço monstruoso. Isso aqui é em tempo polinomial. É, é caro fazer essa multiplicação ainda, mas é tipo caro assim, tá? é bem mais caro que do que calcular um R, mas é barato, é tipo, é rápido, é é bem factivo. Ao contrário de tentar inverter esse processo, inverter esse processo, você tem que começar no G ou começar em algum lugar qualquer e ir calculando próximo, próximo, próximo próximo até você achar, tá? Até você encontrar. Eu achava que o processo de geração da chave fosse esse. Não, isso não. Esse é o processo de quebrar a chave privada a partir da pública. Todo mundo OK? Ah, vou ter que encerrar a aula agora. Não venci ainda minhas meus cartãozinhos. Vamos lá. Atalhou pouco. Hã? Gente atrapadou pouco. Não, 50 minutos tá bom de almoço. Não, tá bom. É isso aí. Porque senão não almoça, né? Não. Vamos lá. Vamos lá. Deixa eu, deixa eu andar um pouco aqui. Vamos fazer um, um mecanismo de assinatura e na aula que vem eu faço o segundo, porque o segundo chinol é um pouco mais é mais é mais legal, tá? Mais legal. Tem dois algoritmos que a gente usa bastante bastante. O primeiro deles a gente vai chamar de EC DSA, Elip Curve Digital Signature algoritm. tá? Que é um algoritmo, um dos algoritmos padronizados. Esse algoritmo ele é pior, ele é mais feio numericamente, ele não tem uma prova de segurança, tipo, cara, ele é tipo tudo é bem pior para um monte de coisa, tá? Ele não me permite fazer vários truques legais que eu vou querer fazer. Bem pior, por que que é esse aí que foi usado no Bitcoin no começo e é usado ainda assim mais maladora quantidade de criptomoedas e de outros sistemas, tá? Por que esse aqui e não o mais legal que eu vou mostrar na aula que vem? Porque o outro que é mais legal foi um cara chamado Klaus Schnor que inventou e aí ele patenteou a parada e aí o que aconteceu? Ninguém implementou parada. Ele abriu a empresa dele lá para tentar explorar essa parada e aí ficou lá para ele e ninguém usou. Foi inventar acho que lá nos anos 70, final dos final de 70 começos 80. E aí ficou com a patente lá. A patente inspirou lá para 2018 por aí. E a partir de então que começou a ter implementações do outro algoritmo que a gente chama de shinó signature, tá? Tem até uma controvérsia se as pessoas querem chamar de shinor signor é o nome do cara porque ele meio que impediu todo mundo de usar durante muitos anos, né? Então assim, mas enfim, eu não quero entrar nessa treta, mas tem uma uma tretinha sobre isso, tá? Eh, enfim, esse algoritmo aqui ele é pior em vários aspectos, mas ele é o que foi padronizado para tentar fugir dessa patente. Então, vamos lá. Como é que eu gero a chave? Um, como é que eu gero a chave? Escolhe o número aleatório e dentro lá daquele campo 256 bits, tá? Multiplica pelo G para dar um P. Isso aqui vai ser a Pub key. Isso aqui vai ser a secret.

Certo? Assim que eu gerei a chave. Como que eu assino? Como que eu assino? Eu tenho uma mensagem M que eu quero assinar. Eu calculo o R. Olha, o R já tá na na conta ali que eu fiz. Eu tenho uma mensagem M que eu quero assinar. Então o que que eu faço? Primeira coisa, escolhe um K. O ideal é que esse não seja aleatório. Na prática, ele não é aleatório, tá? A gente faz ele de forma determinística, mas ele tem que ser único. Só pode usar uma vez, tá? Isso é extremamente importante. Só pode usar ele uma vez, não pode repetir e não pode revelar esse cabo. Não pode revelar esse K. Beleza? Escolhe esse aí. A partir desse eu vou calcular um ponto que eu vou chamar de R, que é K x G, que é um, repare que esse ele é uma espécie de chave privada, né? Tá, mas como a ideia que eu só vou usar uma vez, é bem comum chamar isso aqui de chave efêmera. Eu vou usar só uma vez e depois vou jogar fora, tá? Quer dizer que o R é um ponto, é uma PUB key também, né? que também vai ser efêmera, só vou usar uma vez. E aí eu calculo um número que eu chamo de R pequeno, que vai ser R grande X, que é a coordenada X do ponto R. Eu falei que não era bonito. Calcula essa coordenada aí, não é difícil. Aí eu vou calcular um número S que vai ser parte da minha assinatura, que vai ser a inversa do K vezes o resto da mensagem mais R, que é esse carinha aqui, vezes a minha chave privada. E aí, quem que é a assinatura? A assinatura é o par R pequeno S. Esse par, eu chamo isso aqui de assinatura e mando para vocês. E como é que eu verifico essa parada? Como é que eu verifico essa parada? Eu recebi o R, o S, eu recebi o M e eu recebi o P de você. Eu tenho a mensagem, eu tenho a chave pública e eu tenho a assinatura. Presta atenção no que eu tenho. Eu vou calcular u igual a S - 1 que tá na assinatura, vezes o resto da mensagem

vezes o resto da mensagem. Eu vou calcular um outro número V que vai ser S - 1 vezes o R pequeno que tá dentro da assinatura. E aí eu vou calcular um R linha, um ponto que vai ser U x G que eu conheço + V x P. O P eu tô recebendo para validar. Aí eu pego o RX linha, que eu vou chamar de R linha, e comparo isso com R que tá na assinatura. Se isso for igual, a assinatura é válida. Se for diferente, a assinatura é. Eu não vou mostrar para vocês por, mas é aí lá na na outra aula que eu tenho gravado também tem mais detalhe porque esse U, porque esse V, aí vai justificar essa conta aqui, tá tal tal. Mas é meio adoc, não é bonito, não. É o que é tranquilo? É o que é aqui. A gente não vai ficar entrando, usando isso aqui muito detalhe, vocês não vão implementar, então é mais informativo do para vocês verem como é que é. Mas o shinor, eu vou entrar um pouco mais de detalhe. o outro esquema de assinatura, porque ele permite fazer vários truques legais, vários truques legais. E esses vários truques legais, eles são usados em Bitcoin, Monero, tipo, todas as cripto que você pensar por aí, tipo, elas estão tentando fazer coisas com truques de chinó. Trues de chinó. E então eu vou mostrar um pouco mais de detalhe porque isso não é importante. Isso é importante para todas as cri, para tudo que você pensar de crirypto chinola, vai entrar. Hã,

shin signatures, assinatura chinó. E tem vários, vários, vários truques. É muito legal. Todo mundo OK com isso por enquanto? Então beleza, na vem a gente fecha a história de Signatures e começa a falar um pouco de consenso e prova de trabalho. Beleza? Até mais. M.